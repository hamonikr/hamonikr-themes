#!/bin/bash
#
# Setting Themes for HamoniKR OS
# 
# 이 프로그램은 하모니카OS 사용자의 테마를 설정하는 프로그램 이기 때문에, root
# 권한이 아니라 사용자 권한으로 실행되어야 합니다. Since this program is a
# program that sets theme of HamoniKR OS users, it should be executed as user
# rights, not root privileges. 
#
# Usage : hamonikr-theme-setting macstyle | winstyle | default | restore
# 
# Copyright 2022 HamoniKR Team. All rights reserved. See LICENSE.md in the
# project root for license information.

[ "$EUID" = 0 ] && echo "Run with user authority. (EUID : $EUID)" && exit
[ ! -d "/home/${USER}/.hamonikr/" ] && mkdir -p /home/${USER}/.hamonikr/
[ ! -d "/home/${USER}/.config/autostart/" ] && mkdir -p /home/${USER}/.config/autostart/

log() {
    # stdout
    echo "$@"
    # write to logfile
    mkdir -p $HOME/.hamonikr/log
    exec 3>&1 1>>$HOME/.hamonikr/log/${0##*/}.log 2>&1 && echo "$(date +%Y-%m-%d_%H:%M_%S) ${0##*/} : $@"
    # stdout reset
    exec 1>&3 3>&-
}

detect_desktop_environment() {
  if [ -n "$XDG_CURRENT_DESKTOP" ]; then
    echo "$XDG_CURRENT_DESKTOP"
  elif [ -n "$DESKTOP_SESSION" ]; then
    echo "$DESKTOP_SESSION"
  else
    if [ -d "/usr/share/xsessions" ]; then
      sessions=$(ls /usr/share/xsessions/ | sed 's/\.desktop$//')
      if [ -n "$sessions" ]; then
        echo "$sessions" | head -n 1
      else
        echo "cinnamon"
      fi
    else
      echo "cinnamon"
    fi
  fi
}

# Detect Desktop Environment
DESKTOP_ENV=$(detect_desktop_environment)
DESKTOP_ENV=$(echo "$DESKTOP_ENV" | tr '[:upper:]' '[:lower:]')

update_dconf() {

  # Copy screen recoding applet to user space
  if [ ! -d "/home/${USER}/.local/share/cinnamon/applets/ScreenShot+RecordDesktop@tech71" ]; then
    cp -ar /usr/share/hamonikr-themes/ScreenShot+RecordDesktop@tech71 /home/${USER}/.local/share/cinnamon/applets/
    # copy translation to user level
    mkdir -p /home/${USER}/.local/share/locale/ko/LC_MESSAGES
    cp -ar /usr/share/hamonikr-themes/home-locale/*.mo /home/${USER}/.local/share/locale/ko/LC_MESSAGES/    
  fi

  if [ ! -d "/home/${USER}/.local/share/cinnamon/applets/sync@szlldm" ]; then
    cp -ar /usr/share/hamonikr-themes/sync@szlldm /home/${USER}/.local/share/cinnamon/applets/
  fi

  # 패널
  gsettings set org.cinnamon favorite-apps "['hamonikr-community.desktop', 'mintinstall.desktop', 'cinnamon-settings.desktop', 'nemo.desktop', 'hamonikr-help.desktop']"
  gsettings set org.cinnamon enabled-extensions "['smart-panel@mohammad-sn', 'gTile@shuairan']"
  gsettings set org.cinnamon panels-height "['1:33']"
  gsettings set org.cinnamon panel-zone-icon-sizes '[{"panelId": 1, "left": 24, "center": 24, "right": 16}]'
  gsettings set org.cinnamon panel-zone-symbolic-icon-sizes '[{"panelId": 1, "left": 24, "center": 24, "right": 16}]'
  gsettings set org.cinnamon enabled-applets "['panel1:left:0:menu@cinnamon.org:0', 
  'panel1:left:1:grouped-window-list@cinnamon.org:1', 
  'panel1:right:0:ScreenShot+RecordDesktop@tech71:2', 
  'panel1:right:1:systray@cinnamon.org:3', 
  'panel1:right:2:printers@cinnamon.org:4', 
  'panel1:right:3:removable-drives@cinnamon.org:5', 
  'panel1:right:4:bluetooth@cinnamon.org:6', 
  'panel1:right:5:sound@cinnamon.org:7', 
  'panel1:right:6:calendar@cinnamon.org:8', 
  'panel1:right:7:notifications@cinnamon.org:9', 
  'panel1:right:8:network@cinnamon.org:10', 
  'panel1:right:9:power@cinnamon.org:11', 
  'panel1:right:10:user@cinnamon.org:12', 
  'panel1:right:11:show-desktop@cinnamon.org:13']"

  # 시작메뉴, 시스템 정보 기본 아이콘
  gsettings set org.cinnamon app-menu-icon-name "hamonikr"
  gsettings set org.cinnamon system-icon "hamonikr"
  gsettings set org.cinnamon.settings-daemon.plugins.xsettings menus-have-icons true

  # nemo 파일 탐색기 
  # 아이콘 기본 크기
  gsettings set org.nemo.icon-view default-zoom-level "small" 
  # 10M 이하 파일까지 미리보기
  gsettings set org.nemo.preferences thumbnail-limit "uint64 10485760"
  # 숨김파일 보이기
  gsettings set org.nemo.preferences show-hidden-files true

  # 프로그램 메뉴 아이콘 사이트 24 로 조정
  # menu-icon-size와 } 사이의 텍스트만 대상으로 32를 24로 치환.
  # fav-icon-size 는 변경하지 않아야 함
  sed -i.bak '/menu-icon-size/,/}/s/\("value": \)32/\124/' $HOME/.config/cinnamon/spices/menu@cinnamon.org/0.json
  # 하모니카가 아닌 환경에서는 start-here-symbolic 으로 메뉴아이콘을 변경
  if [ ! -f "/etc/hamonikr/info" ]; then
    sed -i.bak '/"menu-icon"/,/}/s/\("value": \)"hamonikr"/\1"start-here-symbolic"/' $HOME/.config/cinnamon/spices/menu@cinnamon.org/0.json
  fi

  # Update xfce icon configuration
  if [ "${DESKTOP_ENV}" = "xfce" ]; then
    sed -i "s/^button-icon=.*/button-icon=hamonikr/" $HOME/.config/xfce4/panel/whiskermenu-1.rc
  fi

  # 테마 설정
  if [ -d /usr/share/icons/Stylish ]; then
    gsettings set org.cinnamon.desktop.interface icon-theme 'Stylish-Dark'
  else
    gsettings set org.cinnamon.desktop.interface icon-theme 'HamoniKR'
  fi
  gsettings set org.cinnamon.desktop.interface cursor-theme 'Cursor-Light'
  gsettings set org.cinnamon.desktop.interface gtk-theme 'HamoniKR-Dark'
  gsettings set org.cinnamon.desktop.wm.preferences theme 'HamoniKR'
  gsettings set org.cinnamon.theme name 'Paektu'
    
  # nimf 입력기 기본으로 설정
  if command -v nimf &> /dev/null ; then
      im-config -n nimf
      log "Update nimf as default"
  fi

  # 한글과 영문이 섞여있는 폰트 설정은 사용 중인 언어에 따라서 다른 폰트명을 사용해야 제대로 표시 됨
  # 
  # 나눔 스퀘어 라운드 폰트의 경우 fc-list 로 확인하면 아래와 같이 이름이 다름.
  # ko) 나눔스퀘어라운드 Light, 나눔스퀘어라운드 Regular, 나눔스퀘어라운드 Bold
  # en) NanumSquareRound Light, NanumSquareRound Regular, NanumSquareRound Bold
  # 
  # Pretendard, Gothic A1, SUIT 는 영문 폰트명만 사용하므로 동일.
  case $LANG in
    ko*)
      gsettings set org.cinnamon.desktop.interface font-name 'Pretendard 10'
      gsettings set org.nemo.desktop font 'Pretendard Medium 10'        
      gsettings set org.gnome.desktop.interface document-font-name 'Pretendard 10'    
      gsettings set org.gnome.desktop.interface monospace-font-name 'Hack Nerd Font 9'
      gsettings set org.cinnamon.desktop.wm.preferences titlebar-font 'Pretendard Medium 11'
    ;;
    *)
      gsettings set org.cinnamon.desktop.interface font-name 'Pretendard 10'
      gsettings set org.nemo.desktop font 'Pretendard Medium 10'        
      gsettings set org.gnome.desktop.interface document-font-name 'Pretendard 10'    
      gsettings set org.gnome.desktop.interface monospace-font-name 'Hack Nerd Font 9'
      gsettings set org.cinnamon.desktop.wm.preferences titlebar-font 'Pretendard Medium 11'
    ;;
  esac  

  # 바탕화면, greeter 배경화면
  gsettings set org.cinnamon.desktop.background picture-uri "file:////usr/share/backgrounds/hamonikr/default_background.jpg"
  gsettings set org.gnome.desktop.background picture-uri "file:////usr/share/backgrounds/hamonikr/default_background.jpg"
  gsettings set org.mate.background picture-filename "file:////usr/share/backgrounds/hamonikr/default_background.jpg"                
  gsettings set x.dm.slick-greeter background '/usr/share/backgrounds/hamonikr/default_background.jpg'

}

show_conky() {
  # conky - simple
  if [ -f "$HOME/.conky/paektu/simple.conf" ]; then
    is_conky_simple=$(ps -ef | grep "conky -c $HOME/.conky/paektu/simple.conf" | grep -v "grep" | awk 'FNR {print $2}')

    if [ "$is_conky_simple" = "" ]; then
        cd $HOME/.conky/paektu
        conky -c "$HOME/.conky/paektu/simple.conf" &
    else
        kill -9 $(ps -ef | grep "conky -c $HOME/.conky/paektu/simple.conf" | grep -v "grep" | awk 'FNR {print $2}')
        cd $HOME/.conky/paektu
        conky -c "$HOME/.conky/paektu/simple.conf" &      
    fi
  fi
  # conky - widget : sometimes break
  # if [ -f "$HOME/.conky/paektu/widget.conf" ]; then
  #   is_conky_simple=$(ps -ef | grep "conky -c $HOME/.conky/paektu/widget.conf" | grep -v "grep" | awk 'FNR {print $2}')

  #   if [ "$is_conky_simple" = "" ]; then
  #       cd $HOME/.conky/paektu
  #       conky -c "$HOME/.conky/paektu/widget.conf" &
  #   else
  #       kill -9 $(ps -ef | grep "conky -c $HOME/.conky/paektu/widget.conf" | grep -v "grep" | awk 'FNR {print $2}')
  #       cd $HOME/.conky/paektu
  #       conky -c "$HOME/.conky/paektu/widget.conf" &      
  #   fi
  # fi
}

mkdir -p $HOME/.hamonikr/theme

case $1 in
  default|macstyle|mac)
    [ -f $HOME/.hamonikr/theme/${0##*/}.done ] && isrun="run";

    if [ x$isrun != "xrun" ] ; then

      dconf dump / > $HOME/.hamonikr/theme/${0##*/}.save
      log "Backup current theme"

      # if [ -f $HOME/.config/autostart/hamonikr-theme.desktop ] ; then
      #   SELECT=`cat $HOME/.config/autostart/hamonikr-theme.desktop | grep Exec`
      #   sed -i "s/$SELECT/Exec=${0##*/} default/g" $HOME/.config/autostart/hamonikr-theme.desktop
      # fi

      update_dconf
      gsettings set org.cinnamon panels-enabled "['1:0:top']"
      show_conky

      # Mac 스타일로 Dock 사용하는 경우에는 plank 설정
      if [ -z $(pidof plank | grep '[0-9]') ] ; then
        dconf load /net/launchpad/plank/docks/dock1/ < /etc/skel/.config/plank/dock1/launchers/plank-dconf
        cp /etc/skel/.config/autostart/plank.desktop $HOME/.config/autostart/plank.desktop
        plank &
      fi      

      # write parameter = default
      echo "$1" | tee $HOME/.hamonikr/theme/${0##*/}.done &> /dev/null
      log "Updated macstyle theme"      

    fi
  ;;
  winstyle|win)
    [ -f $HOME/.hamonikr/theme/${0##*/}.done ] && isrun="run";

    if [ x$isrun != "xrun" ] ; then

      dconf dump / > $HOME/.hamonikr/theme/${0##*/}.save
      log "Backup current theme"

      # if [ -f $HOME/.config/autostart/hamonikr-theme.desktop ] ; then
      #   SELECT=`cat $HOME/.config/autostart/hamonikr-theme.desktop | grep Exec`
      #   sed -i "s/$SELECT/Exec=${0##*/} default/g" $HOME/.config/autostart/hamonikr-theme.desktop
      # fi

      update_dconf
      gsettings set org.cinnamon panels-enabled "['1:0:bottom']"
      show_conky
  
      # 윈도우 스타일로 Dock 사용을 안하는 경우에는 kill plank
      if [ ! -z $(pidof plank | grep '[0-9]') ] ; then
        killall plank && rm -f $HOME/.config/autostart/plank.desktop
      fi

      # write parameter = default
      echo "$1" | tee $HOME/.hamonikr/theme/${0##*/}.done &> /dev/null
      log "Updated winstyle theme"      

    fi
  ;;
  restore|init|reset)
    if [ -f $HOME/.hamonikr/theme/${0##*/}.save ] && \
       [ -f $HOME/.hamonikr/theme/${0##*/}.done ] ; then

        rm -f $HOME/.hamonikr/theme/${0##*/}.done

        dconf load / < $HOME/.hamonikr/theme/${0##*/}.save
        if [ $? -eq 0 ] ; then
            log "Successful restored previous settings." 
        else
            log "Failed : Restore previous settings."
        fi

    fi
  ;;
  *)
    echo "This program required parameter"
    echo "Usage : ${0##*/} macstyle | winstyle | default | restore"
  ;;

esac
